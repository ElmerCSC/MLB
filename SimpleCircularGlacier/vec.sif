!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!! Elmer Solver input file
!!
!! Vectorized Stokes solution.
!!
!! All units are in m-MPa-year
!! Temperatures are in Kelvin
!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! check keywords warn
! echo on
$name="Vec"
include defs.sif

Header
  Mesh DB "." "circle"
!  Mesh DB "." "deform"
  Results Directory "results"
End

Constants
End

Simulation
  Coordinate System  = "Cartesian 3D"
  Simulation Type = "Steady State"             

  ! Internal extrusion parameters, may be altered.
  Extruded Mesh Levels = Integer $nlayers
  Extruded Max Coordinate = Real 100		

  ! Coupled iterations between different solvers
  !---------------------------------------------
  Steady State Max Iterations = 1
  Initialize Dirichlet Conditions = Logical False
  
  ! Output files
  ! ------------
  Post File = $name$.vtu
  vtu: Save Bulk Only = Logical True
!  Ascii Output = True

  Max Output Level = 5
End

! Maps the constant-thickness mesh between given bedrock and surface topology
Solver 1 
  Exec Solver = "before simulation"
  Equation = "MapCoordinate"
  Procedure = "StructuredMeshMapper" "StructuredMeshMapper"
  Active Coordinate = Integer 3
  Displacement Mode = Logical False
  Minimum Height = Real 5.0
  Dot Product Tolerance = 1.0e-3
End

! Computes height and depth assuming an extruded mesh.
Solver 2
  Exec Solver = "before simulation" 
  Equation = "HeightDepth"
  Procedure = "StructuredProjectToPlane" "StructuredProjectToPlane"
  Active Coordinate = Integer 3
  Operator 1 = depth
  Operator 2 = height
End 

Solver 3
  Exec Solver = "Before Timestep" 
  Equation = "Normal vector"
  Procedure = "ElmerIceSolvers" "ComputeNormalSolver"
  Variable = -dofs 3 "Normal Vector"
  Optimize Bandwidth = Logical False
  ComputeAll = Logical False
End

Solver 4
  Equation = "Stokes-Vec"
  Procedure = "IncompressibleNSVec" "IncompressibleNSSolver"
  Div-Curl Discretization = Logical False

  Optimize Bandwidth = Logical True
  Flow Model = Stokes

  include nonlinsys.sif
  include gcr.sif
  !include mumps.sif

  ! Convergence on timelevel (not required here)
  !---------------------------------------------
  !Relative Integration Order = -1
  Number of Integration Points = Integer 44 ! 21, 28, 44, 64, ...

  Save Viscosity = Logical True
  Save Slip = Logical True

! Some timing info
  Boundary Assembly Timing = Logical True
  Bulk Assembly Timing = Logical True
  Solver Timing = Logical True
  Linear System Timing = Logical True


! Activate this to save the linear system: linsys_a.dat and linsys_b.dat
!  Linear System Save = Logical True
! This one makes the saving happen only after all nonlin iterations. 
  Linear System Save Slot = "finish"
End



Solver 5
  Equation = SaveScalars
  Procedure = "SaveData" "SaveScalars"
  Show Norm = True
  Show Norm Index = 1

! Calculate the total kinetic energy of the ice
  Variable 1 = velocity 
  Operator 1 = convective energy

! Integrate over the x-velocity. As the slope is in x this is a robust measure
! for the goodness of the slip condition. 
  Variable 2 = velocity 1 
  Operator 2 = boundary int

  Filename = $name$.dat
End

Body 1
  Name = "glacier"
  Equation = 1
  Material = 1
  Body Force = 1
End

Equation 1
  Active Solvers(4) = 1 2 3 4
End

Body Force 1
  Flow BodyForce 1 = 0.0
  Flow BodyForce 2 = 0.0 
  Flow BodyForce 3 = $gravity
End

Material 1
  Name = "Ice"
  Density = Real $rhoi

  ! First viscosity with newtonian fluid
  ! happens to give velocities of proper size
  Viscosity = Real 1.0 

  ! Nonnewtonian viscosity
  Viscosity Model = String "Glen"
  Glen Exponent = Real 3.0
  Critical Shear Rate =  Real 1.0E-10
  ! Paterson value in MPa^-3a^-1
  Limit Temperature = Real -10.0
  Rate Factor 1 = Real $A1 
  Rate Factor 2 = Real $A2 
  Activation Energy 1 = Real $Q1    
  Activation Energy 2 = Real $Q2 
  Glen Enhancement Factor = Real 1.0
!  Constant Temperature = Real $Tc
  Relative Temperature = Real $Tc
End

Boundary Condition 1
  ComputeNormal = Logical False
  Name = "sides"
  Target Boundaries(4) = 1 2 3 4
End

!! DON'T CHANGE ORDER OF NEXT 2 BC's!
Boundary Condition 2
  ComputeNormal = Logical True
  Name = "bedrock"

  ComputeNormal = Logical True
 
  ! Weertman sliding conditions
  Normal-Tangential Velocity = True
  Velocity 1 = 0.0

! no-slip condition
  Velocity 2 = 0.0
  Velocity 3 = 0.0

!  $slipcoeff=1.0
!  Slip Coefficient 2 = $slipcoeff
!  Slip Coefficient 3 = $slipcoeff

!  Slip Coefficient 2 =  Variable Coordinate 1
!    Real Procedure "ElmerIceUSF" "Sliding_Weertman"
!  Slip Coefficient 3 =  Variable Coordinate 1
!    Real Procedure "ElmerIceUSF" "Sliding_Weertman"
!  Weertman Friction Coefficient = Real 0.1
!  Weertman Exponent = Real $1.0/3.0
!  Weertman Linear Velocity = Real 1.0e-5

!  Friction Normal Velocity Zero = Logical True

  Save Scalars = True
End

Boundary Condition 3
  ComputeNormal = Logical False
  Name = "surface"
End 


include shape.sif 

Solver 4 :: Reference Norm = 6.00392105E-01
Solver 5 :: Reference Norm = 1.282076E+08